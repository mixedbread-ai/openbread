name: Release

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches: [main]

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: write
  pull-requests: write
  id-token: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm run build

      - name: Create Release Pull Request or Publish
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm changeset version
          commit: 'chore: release packages'
          title: 'chore: release packages'
          createGithubReleases: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check for packages to publish
        id: check_packages
        if: steps.changesets.outputs.hasChangesets == 'false'
        run: |
          # Check if packages need publishing
          CLI_VERSION=$(node -p "require('./packages/cli/package.json').version")
          MCP_VERSION=$(node -p "require('./packages/mcp-server/package.json').version")
          
          # Check if versions exist on npm
          CLI_EXISTS=$(npm view @mixedbread/cli@$CLI_VERSION version 2>/dev/null || echo "")
          MCP_EXISTS=$(npm view @mixedbread/mcp@$MCP_VERSION version 2>/dev/null || echo "")
          
          echo "CLI version $CLI_VERSION exists: $([[ -n \"$CLI_EXISTS\" ]] && echo 'yes' || echo 'no')"
          echo "MCP version $MCP_VERSION exists: $([[ -n \"$MCP_EXISTS\" ]] && echo 'yes' || echo 'no')"
          
          echo "cli_version=$CLI_VERSION" >> $GITHUB_OUTPUT
          echo "mcp_version=$MCP_VERSION" >> $GITHUB_OUTPUT
          echo "cli_needs_publish=$([[ -z \"$CLI_EXISTS\" ]] && echo 'true' || echo 'false')" >> $GITHUB_OUTPUT
          echo "mcp_needs_publish=$([[ -z \"$MCP_EXISTS\" ]] && echo 'true' || echo 'false')" >> $GITHUB_OUTPUT

      - name: Publish CLI package
        if: steps.changesets.outputs.hasChangesets == 'false' && steps.check_packages.outputs.cli_needs_publish == 'true'
        run: |
          cd packages/cli
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish MCP package
        if: steps.changesets.outputs.hasChangesets == 'false' && steps.check_packages.outputs.mcp_needs_publish == 'true'
        run: |
          cd packages/mcp-server
          bash ./build
          cd dist
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Releases
        if: steps.changesets.outputs.hasChangesets == 'false'
        run: |
          if [[ "${{ steps.check_packages.outputs.cli_needs_publish }}" == "true" ]]; then
            gh release create "cli-v${{ steps.check_packages.outputs.cli_version }}" \
              --title "CLI v${{ steps.check_packages.outputs.cli_version }}" \
              --notes "Release of @mixedbread/cli v${{ steps.check_packages.outputs.cli_version }}"
          fi
          
          if [[ "${{ steps.check_packages.outputs.mcp_needs_publish }}" == "true" ]]; then
            gh release create "mcp-v${{ steps.check_packages.outputs.mcp_version }}" \
              --title "MCP v${{ steps.check_packages.outputs.mcp_version }}" \
              --notes "Release of @mixedbread/mcp v${{ steps.check_packages.outputs.mcp_version }}"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}